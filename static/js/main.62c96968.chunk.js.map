{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["styles","container","display","flexDirection","alignItems","justifyContent","height","backgroundColor","button","padding","fontSize","cursor","margin","border","borderRadius","color","transition","status","App","setStatus","useState","loading","setLoading","React","createElement","style","onClick","async","response","fetch","method","headers","data","json","error","console","disabled","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sMAsCA,MAAMA,EAAS,CACXC,UAAW,CACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRC,gBAAiB,WAErBC,OAAQ,CACJC,QAAS,YACTC,SAAU,OACVC,OAAQ,UACRC,OAAQ,SACRC,OAAQ,OACRC,aAAc,MACdP,gBAAiB,UACjBQ,MAAO,QACPC,WAAY,yBAEhBC,OAAQ,CACJP,SAAU,SAIHQ,MA5Df,WACI,MAAOD,EAAQE,GAAaC,mBAAS,QAC9BC,EAASC,GAAcF,oBAAS,GAqBvC,OACIG,IAAAC,cAAA,OAAKC,MAAOzB,EAAOC,WACfsB,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UAAQE,QArBKC,UACjBL,GAAW,GACX,IACI,MAAMM,QAAiBC,MAAM,sCAAuC,CAChEC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAGlBC,QAAaJ,EAASK,OAC5Bd,EAAUa,EAAKf,QACjB,MAAOiB,GACLC,QAAQD,MAAM,yBAA0BA,GAC3C,QACGZ,GAAW,KAOoBc,SAAUf,EAASI,MAAOzB,EAAOQ,QAC3Da,EAAU,gBAA6B,OAAXJ,EAAkB,kBAAoB,kBAEvEM,IAAAC,cAAA,KAAGC,MAAOzB,EAAOiB,QAAQ,kBAAeM,IAAAC,cAAA,cAASP,MCpB9CoB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,IAAAC,cAACD,IAAM6B,WAAU,KACf7B,IAAAC,cAACN,EAAG,QAORmB,K","file":"static/js/main.62c96968.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [status, setStatus] = useState('Off'); // Initial status\n    const [loading, setLoading] = useState(false); // Loading state for button\n\n    // Function to toggle the webcam\n    const toggleWebcam = async () => {\n        setLoading(true); // Set loading state\n        try {\n            const response = await fetch('http://localhost:5000/toggle-webcam', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const data = await response.json();\n            setStatus(data.status); // Update status based on response\n        } catch (error) {\n            console.error('Error toggling webcam:', error);\n        } finally {\n            setLoading(false); // Reset loading state\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1>Webcam Control</h1>\n            <button onClick={toggleWebcam} disabled={loading} style={styles.button}>\n                {loading ? 'Processing...' : status === 'On' ? 'Turn Off Webcam' : 'Turn On Webcam'}\n            </button>\n            <p style={styles.status}>Camera Status: <strong>{status}</strong></p>\n        </div>\n    );\n}\n\n// Styles for the component\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#f0f0f0',\n    },\n    button: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        margin: '20px 0',\n        border: 'none',\n        borderRadius: '5px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        transition: 'background-color 0.3s',\n    },\n    status: {\n        fontSize: '18px',\n    },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}